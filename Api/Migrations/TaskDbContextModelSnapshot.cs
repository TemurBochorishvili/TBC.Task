// <auto-generated />
using System;
using Api.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    partial class TaskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Api.Core.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tbilisi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sagarejo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gurjaani"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tevali"
                        });
                });

            modelBuilder.Entity("Api.Core.Models.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhysicalPersonId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhysicalPersonId");

                    b.ToTable("PhoneNumbers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "551 75 67 76",
                            PhysicalPersonId = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Number = "032 2 75 67 76",
                            PhysicalPersonId = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Number = "551 12 13 76",
                            PhysicalPersonId = 2,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Number = "032 2 33 22 76",
                            PhysicalPersonId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Number = "551 12 13 57",
                            PhysicalPersonId = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            Number = "032 2 64 55 76",
                            PhysicalPersonId = 3,
                            Type = 2
                        });
                });

            modelBuilder.Entity("Api.Core.Models.PhysicalPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureRelativePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PhysicalPersons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            DateOfBirth = new DateTime(1996, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            LastName = "Botchorishvili",
                            Name = "Temo",
                            PersonalNumber = "01011086652",
                            PictureRelativePath = "C://"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            DateOfBirth = new DateTime(1996, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            LastName = "Zibzibadze",
                            Name = "Kote",
                            PersonalNumber = "01211086652",
                            PictureRelativePath = "C://"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 1,
                            DateOfBirth = new DateTime(1996, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            LastName = "Egadze",
                            Name = "Soso",
                            PersonalNumber = "01211086652",
                            PictureRelativePath = "C://"
                        });
                });

            modelBuilder.Entity("Api.Core.Models.PhysicalPersonRelation", b =>
                {
                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int");

                    b.Property<int>("Relation")
                        .HasColumnType("int");

                    b.HasKey("MasterId", "RelatedId");

                    b.HasIndex("RelatedId");

                    b.ToTable("PhysicalPersonRelations", (string)null);

                    b.HasData(
                        new
                        {
                            MasterId = 1,
                            RelatedId = 2,
                            Relation = 2
                        },
                        new
                        {
                            MasterId = 1,
                            RelatedId = 3,
                            Relation = 0
                        },
                        new
                        {
                            MasterId = 2,
                            RelatedId = 3,
                            Relation = 3
                        });
                });

            modelBuilder.Entity("Api.Core.Models.PhoneNumber", b =>
                {
                    b.HasOne("Api.Core.Models.PhysicalPerson", "PhysicalPerson")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PhysicalPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhysicalPerson");
                });

            modelBuilder.Entity("Api.Core.Models.PhysicalPerson", b =>
                {
                    b.HasOne("Api.Core.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Api.Core.Models.PhysicalPersonRelation", b =>
                {
                    b.HasOne("Api.Core.Models.PhysicalPerson", "Master")
                        .WithMany("PhysicalPersonRelations")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Api.Core.Models.PhysicalPerson", "Related")
                        .WithMany("PhysicalPersonRelationsOf")
                        .HasForeignKey("RelatedId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Master");

                    b.Navigation("Related");
                });

            modelBuilder.Entity("Api.Core.Models.PhysicalPerson", b =>
                {
                    b.Navigation("PhoneNumbers");

                    b.Navigation("PhysicalPersonRelations");

                    b.Navigation("PhysicalPersonRelationsOf");
                });
#pragma warning restore 612, 618
        }
    }
}
